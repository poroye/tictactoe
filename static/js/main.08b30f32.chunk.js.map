{"version":3,"sources":["Square.js","Board.js","App.js","whowin.js","index.js"],"names":["Square","value","size","onClick","style","parseInt","className","fontSize","Board","squares","gridTemplateColumns","gridTemplateRows","map","square","i","App","useState","setSize","maxSize","settingphase","setSettingphase","startWord","setStartWord","changeWord","setChangeWord","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","j","push","d","calculateWinner","xO","jumpTo","step","type","min","max","class","onChange","e","target","historyPoint","slice","current","alert","console","log","_step","move","destination","ReactDOM","render","document","getElementById"],"mappings":"mLAaeA,EAXA,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,MAAMC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACtBC,EAAQH,EAAK,kBAAcA,GAAd,UACnB,OAAII,SAASH,GAAM,GACT,wBAAQI,UAAWF,EAAOD,QAASA,EAASC,MAAO,CAACG,SAAW,QAA/D,SAAyEN,IAEzEI,SAASH,GAAM,EACf,wBAAQI,UAAWF,EAAOD,QAASA,EAASC,MAAO,CAACG,SAAW,OAA/D,SAAwEN,IAE1E,wBAAQK,UAAWF,EAAOD,QAASA,EAASC,MAAO,CAACG,SAAW,OAA/D,SAAwEN,KCCnEO,EARD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAQP,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,QAAjB,OACZ,qBAAKG,UAAU,QAAQF,MAAO,CAACM,oBAAoB,UAAUR,EAAK,SAASS,iBAAiB,UAAUT,EAAK,UAA3G,SACGO,EAAQG,KAAI,SAACC,EAAQC,GAAT,OACX,cAAC,EAAD,CAAgBb,MAAOY,EAAQX,KAAMA,EAAMC,QAAS,kBAAMA,EAAQW,KAArDA,SCFnB,IAyFeC,EAzFH,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACTd,EADS,KACJe,EADI,OAEaD,mBAAS,IAFtB,mBAETE,EAFS,aAGuBF,oBAAS,IAHhC,mBAGTG,EAHS,KAGIC,EAHJ,OAIiBJ,mBAAS,SAJ1B,mBAITK,EAJS,KAICC,EAJD,OAKmBN,mBAAS,IAL5B,mBAKTO,EALS,KAKEC,EALF,OAOcR,mBAAS,CAACS,MAAMvB,EAAKA,GAAMwB,KAAK,QAP9C,mBAOTC,EAPS,KAOAC,EAPA,OAQoBZ,mBAAS,GAR7B,mBAQTa,EARS,KAQGC,EARH,OAScd,oBAAS,GATvB,mBASTe,EATS,KASAC,EATA,KAUVC,ECdO,SAAyBxB,EAAQP,EAAKiB,GACjD,GAAY,GAARjB,EAMA,IALA,IAAMgC,EAAQ,CACV,CAAC,EAAE,GAAG,CAAC,EAAE,GACT,CAAC,EAAE,GAAG,CAAC,EAAE,GACT,CAAC,EAAE,GAAG,CAAC,EAAE,IAEJpB,EAAI,EAAGA,EAAIoB,EAAMC,OAAQrB,IAAK,CAAC,IAAD,cACpBoB,EAAMpB,GADc,GAC5BsB,EAD4B,KACzBC,EADyB,KAEnC,GAAI5B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,GACrC,OAAO5B,EAAQ2B,QAItB,GAAY,GAARlC,EAML,IALA,IAAMgC,EAAQ,CACV,CAAC,EAAG,EAAG,GAAG,CAAC,EAAG,EAAG,GAAG,CAAC,EAAG,EAAG,GAC3B,CAAC,EAAG,EAAG,GAAG,CAAC,EAAG,EAAG,GAAG,CAAC,EAAG,EAAG,GAC3B,CAAC,EAAG,EAAG,GAAG,CAAC,EAAG,EAAG,IAEZpB,EAAI,EAAGA,EAAIoB,EAAMC,OAAQrB,IAAK,CAAC,IAAD,cACjBoB,EAAMpB,GADW,GAC5BsB,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GAClE,OAAO7B,EAAQ2B,GAI3B,IAAIF,EAAQ,GACZhC,EAAOG,SAASH,GAChB,IAAK,IAAIY,EAAI,EAAGA,GAAKZ,GAAMA,EAAK,GAAIY,GAAIZ,EACpC,IAAK,IAAIqC,EAAI,EAAGA,EAAIrC,EAAK,EAAGqC,IAAKL,EAAMM,KAAK,CAAC1B,EAAEyB,EAAEzB,EAAEyB,EAAE,EAAEzB,EAAEyB,EAAE,EAAEzB,EAAEyB,EAAE,IACrE,IAAK,IAAIzB,EAAI,EAAGA,EAAIZ,EAAOY,IACvB,IAAK,IAAIyB,EAAI,EAAGA,EAAIrC,GAAMA,EAAK,GAAIqC,GAAIrC,EAAMgC,EAAMM,KAAK,CAAC1B,EAAEyB,EAAEzB,EAAEyB,EAAErC,EAAKY,EAAEyB,EAAQ,EAALrC,EAAQY,EAAEyB,EAAQ,EAALrC,IAC5F,IAAK,IAAIY,EAAI,EAAGA,EAAGZ,GAAMA,EAAK,GAAKY,GAAI,EACnC,IAAK,IAAIyB,EAAI,EAAGA,EAAIrC,EAAK,EAAIqC,IAAKL,EAAMM,KAAK,CAAC1B,EAAEyB,EAAEzB,EAAEyB,EAAErC,EAAK,EAAEY,EAAEyB,EAAY,GAARrC,EAAK,GAAMY,EAAEyB,EAAY,GAARrC,EAAK,KAC7F,IAAK,IAAIY,EAAI,EAAGA,EAAGZ,GAAMA,EAAK,GAAKY,GAAI,EACnC,IAAK,IAAIyB,EAAI,EAAGA,EAAIrC,EAAK,EAAIqC,IAAKL,EAAMM,KAAK,CAAC1B,EAAEyB,EAAEzB,EAAEyB,EAAErC,EAAK,EAAEY,EAAEyB,EAAY,GAARrC,EAAK,GAAMY,EAAEyB,EAAY,GAARrC,EAAK,KAE7F,IAAK,IAAIY,EAAI,EAAGA,EAAIoB,EAAMC,OAAQrB,IAAK,CAAC,IAAD,cACVoB,EAAMpB,GADI,GACxBsB,EADwB,KACrBC,EADqB,KAClBC,EADkB,KACfG,EADe,KAE/B,GAAIhC,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,IAAM7B,EAAQ2B,KAAO3B,EAAQgC,GAC/F,OAAOhC,EAAQ2B,GAI3B,OAAO,KD/BMM,CAAgBf,EAAQE,GAAY3B,GAC7CyC,EAAKZ,EAAU,IAAM,IA0BrBa,EAAS,SAACC,IACM,IAAjB1B,IACDW,EAAce,GACdb,EAAWa,EAAO,IAAM,KA8B5B,OAAQ,qCACJ,sBAAKvC,UAAU,mBAAf,UACGa,GAAgB,uBAAO2B,KAAK,QAAQC,IAAK,EAAGC,IAAK9B,EAASjB,MAAOC,EAAM+C,MAAM,SAC5EC,SAAW,SAAAC,GAAC,OAAIlC,EAAQkC,EAAEC,OAAOnD,UAElCkB,GAAgB,mGACjB,yBAAQb,UAAU,SAASH,QAAS,kBAlBnB,IAAjBgB,GACFG,EAAa,IACbE,EAAc,YAGdoB,EAAO,GACPtB,EAAa,SACbE,EAAc,UAEhBJ,GAAiBD,IASb,UAAwDI,EAAxD,SAA0ErB,EAA1E,IAAiFA,EAAjF,IAAwFmB,QAE1F,cAAC,EAAD,CAAOZ,QAASkB,EAAQE,GAAa3B,KAAMA,EAAMC,QAhEjC,SAACW,IACE,IAAjBK,IACFyB,EAAO,GACPtB,EAAa,SACbE,EAAc,IACdJ,GAAiBD,IAEnB,IAAMkC,EAAe1B,EAAQ2B,MAAM,EAAGzB,EAAa,GAC7C0B,EAAUF,EAAaxB,GACvBpB,EAAO,YAAO8C,GACpB,GAAItB,GAAUJ,GAAe3B,EAAKA,EAGhC,OAFAsD,MAAM,wEACNC,QAAQC,IAAI7B,GAGVpB,EAAQK,KACZL,EAAQK,GAAK6B,EACbf,EAAW,GAAD,mBAAKyB,GAAL,CAAmB5C,KAC7BqB,EAAcuB,EAAalB,QAC3BH,GAAYD,KA6CV,eACA,sBAAKzB,UAAU,eAAf,UACE,gCACE,yCAnCNqB,EAAQf,KAAI,SAAC+C,EAAOC,GAClB,IAAoB,IAAjBzC,GAA0BU,EAAa,EAAE,CAC5C,IAAMgC,EAAcD,EAAI,sBAAkBA,GAAS,UACnD,OACE,6BACE,wBAAQtD,UAAU,SAASH,QAAS,kBAAMyC,EAAOgB,IAAjD,SAAyDC,KADlDD,UAkCT,6BAAK3B,EAAS,WAAaA,EAAS,gBAAkBU,W,MEnF9DmB,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.08b30f32.chunk.js","sourcesContent":["import React , { useState }  from \"react\";\r\n\r\nconst Square = ({ value,size, onClick }) => {\r\n  const style = value ? `squares ${value}` : `squares`;\r\n  if (parseInt(size)>11){\r\n    return (<button className={style} onClick={onClick} style={{fontSize : \"20px\"}}>{value}</button>);\r\n  }\r\n  else if ((parseInt(size)>5)) {\r\n    return (<button className={style} onClick={onClick} style={{fontSize : \"2em\"}}>{value}</button>);\r\n  }\r\n  return (<button className={style} onClick={onClick} style={{fontSize : \"6em\"}}>{value}</button>);\r\n};\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nconst Board = ({ squares,size, onClick }) => (\r\n  <div className=\"board\" style={{gridTemplateColumns:\"repeat(\"+size+\", 1fr)\",gridTemplateRows:\"repeat(\"+size+\", 1fr)\"}}>\r\n    {squares.map((square, i) => (\r\n      <Square key={i} value={square} size={size} onClick={() => onClick(i)}/>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Board;\r\n","import React , { useState } from \"react\";\nimport Board from \"./Board\";\nimport calculateWinner from \"./whowin\";\n\nconst App = () => {\n  const [size,setSize] = useState(20);\n  const [maxSize,setMaxSize] = useState(20);\n  const [settingphase,setSettingphase] = useState(true);\n  const [startWord,setStartWord] = useState(\"start\");\n  const [changeWord,setChangeWord] = useState(\"\");\n  \n  const [history, setHistory] = useState([Array(size*size).fill(null)]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXisNext] = useState(true);\n  const winner = calculateWinner(history[stepNumber],size,settingphase);\n  const xO = xIsNext ? \"X\" : \"O\";\n\n\n  const handleClick = (i) => {\n    if (settingphase === true){\n      jumpTo(0);\n      setStartWord(\"Start\");\n      setChangeWord(\"\");\n      setSettingphase(!settingphase)\n    }\n    const historyPoint = history.slice(0, stepNumber + 1);\n    const current = historyPoint[stepNumber];\n    const squares = [...current];\n    if (winner || stepNumber == (size*size) ){\n      alert(\"you can rollback and continue in history OR resize then restart\")\n      console.log(stepNumber)\n      return;\n    }\n    if (squares[i]) return;\n    squares[i] = xO;\n    setHistory([...historyPoint, squares]);\n    setStepNumber(historyPoint.length);\n    setXisNext(!xIsNext);\n    \n  };\n\n  const jumpTo = (step) => {\n    if(settingphase === false){\n      setStepNumber(step);\n      setXisNext(step % 2 === 0);\n    }\n  };\n\n\n  const renderMoves = () =>\n    history.map((_step, move) => {\n      if(settingphase === false && stepNumber > 0){\n      const destination = move ? `Go to move #${move}` : \"ReStart\";\n      return (\n        <li key={move}>\n          <button className=\"button\" onClick={() => jumpTo(move)}>{destination}</button>\n        </li>\n      );\n      }\n    });\n\n  const startGame = () => {\n    if (settingphase === true) {\n      setStartWord(\"\");\n      setChangeWord(\"Change\");\n    }\n    else{\n      jumpTo(0);\n      setStartWord(\"Start\");\n      setChangeWord(\"\");\n    }\n    setSettingphase(!settingphase)\n  }\n\n  return (<>\n      <div className=\"select-container\">\n        {settingphase && <input type=\"range\" min={2} max={maxSize} value={size} class=\"slider\" \n          onChange={ e => setSize(e.target.value) } ></input>\n          }\n        {settingphase && <h3>slide to change size win with 2 in 2x2,3 in 3x3,4 in 4x4 to 20x20</h3>}\n        <button className=\"button\" onClick={() => startGame()}>{changeWord} size {size}x{size} {startWord}</button>\n      </div>\n      <Board squares={history[stepNumber]} size={size} onClick={handleClick}> </Board>\n      <div className=\"info-wrapper\">\n        <div>\n          <h3>History</h3>\n          {renderMoves()}\n        </div>\n        <h3>{winner ? \"Winner: \" + winner : \"Next Player: \" + xO}</h3>\n      </div>\n\n    </>);\n}\nexport default App;\n","export default function calculateWinner(squares,size,settingphase) {\r\n    if (size == 2){\r\n        const lines = [\r\n            [0,1],[2,3], //horizontal\r\n            [0,2],[1,3], //vertical\r\n            [0,3],[2,1]  //Diagonal\r\n        ];\r\n        for (let i = 0; i < lines.length ;i++) {\r\n            const [a, b] = lines[i];\r\n            if (squares[a] && squares[a] === squares[b]) {\r\n                return squares[a];\r\n            }\r\n        }\r\n    }\r\n    else if (size == 3){\r\n        const lines = [\r\n            [0, 1, 2],[3, 4, 5],[6, 7, 8],  //horizontal\r\n            [0, 3, 6],[1, 4, 7],[2, 5, 8],  //vertical\r\n            [0, 4, 8],[2, 4, 6]             //Diagonal\r\n        ];\r\n        for (let i = 0; i < lines.length ;i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n                return squares[a];\r\n            }\r\n        }\r\n    }\r\n    let lines = [];\r\n    size = parseInt(size)\r\n    for (let i = 0; i <= size*(size-1) ;i=i+size){\r\n        for (let j = 0; j < size-3 ;j++){lines.push([i+j,i+j+1,i+j+2,i+j+3]);}}                                 //horizontal\r\n    for (let i = 0; i < size ; i++){\r\n        for (let j = 0; j < size*(size-3) ;j=j+size){lines.push([i+j,i+j+size,i+j+(size*2),i+j+(size*3)]);}}    //vertical\r\n    for (let i = 0; i<(size*(size-3)); i=i+9){\r\n        for (let j = 0; j < size-3 ; j++){lines.push([i+j,i+j+size+1,i+j+((size+1)*2),i+j+((size+1)*3)])}}      //Diagonal \\\r\n    for (let i = 3; i<(size*(size-3)); i=i+9){\r\n        for (let j = 0; j < size-3 ; j++){lines.push([i+j,i+j+size-1,i+j+((size-1)*2),i+j+((size-1)*3)])}       //Diagonal /\r\n    }\r\n    for (let i = 0; i < lines.length ;i++) {\r\n            const [a, b, c, d] = lines[i];\r\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c] && squares[a] === squares[d]) {\r\n                return squares[a];\r\n            }\r\n    }\r\n\r\n    return null\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}